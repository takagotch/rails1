--- !ruby/object:RI::MethodDescription 
aliases: []

block_params: 
comment: 
- !ruby/struct:SM::Flow::P 
  body: Generates XML output of this object
- !ruby/object:SM::Flow::LIST 
  contents: 
  - !ruby/struct:SM::Flow::LI 
    label: "output:"
    body: Where to write the string. Defaults to $stdout
  - !ruby/struct:SM::Flow::LI 
    label: "indent:"
    body: An integer. If -1, no indenting will be used; otherwise, the indentation will be this number of spaces, and children will be indented an additional amount. Defaults to -1.
  - !ruby/struct:SM::Flow::LI 
    label: "transitive:"
    body: If transitive is true and indent is &gt;= 0, then the output will be pretty-printed in such a way that the added whitespace does not affect the absolute <b>value</b> of the document -- that is, it leaves the value and number of Text nodes in the document unchanged.
  - !ruby/struct:SM::Flow::LI 
    label: "ie_hack:"
    body: Internet Explorer is the worst piece of crap to have ever been written, with the possible exception of Windows itself. Since IE is unable to parse proper XML, we have to provide a hack to generate XML that IE's limited abilities can handle. This hack inserts a space before the /&gt; on empty tags.
  type: :NOTE
- !ruby/struct:SM::Flow::P 
  body: <em>Examples</em>
- !ruby/struct:SM::Flow::VERB 
  body: " c = CData.new( &quot; Some text &quot; )\n c.write( $stdout )     #-&gt;  &lt;![CDATA[ Some text ]]&gt;\n"
full_name: REXML::CData#write
is_singleton: false
name: write
params: ( output=$stdout, indent=-1, transitive=false, ie_hack=false )
visibility: public
