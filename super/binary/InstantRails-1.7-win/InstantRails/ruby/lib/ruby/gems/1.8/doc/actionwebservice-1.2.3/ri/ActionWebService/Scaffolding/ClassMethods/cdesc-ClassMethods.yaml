--- !ruby/object:RI::ClassDescription 
attributes: []

class_methods: []

comment: 
- !ruby/struct:SM::Flow::P 
  body: Web service invocation scaffolding provides a way to quickly invoke web service methods in a controller. The generated scaffold actions have default views to let you enter the method parameters and view the results.
- !ruby/struct:SM::Flow::P 
  body: "Example:"
- !ruby/struct:SM::Flow::VERB 
  body: "  class ApiController &lt; ActionController\n    web_service_scaffold :invoke\n  end\n"
- !ruby/struct:SM::Flow::P 
  body: This example generates an <tt>invoke</tt> action in the <tt>ApiController</tt> that you can navigate to from your browser, select the API method, enter its parameters, and perform the invocation.
- !ruby/struct:SM::Flow::P 
  body: "If you want to customize the default views, create the following views in &quot;app/views&quot;:"
- !ruby/object:SM::Flow::LIST 
  contents: 
  - !ruby/struct:SM::Flow::LI 
    label: "*"
    body: <tt>action_name/methods.rhtml</tt>
  - !ruby/struct:SM::Flow::LI 
    label: "*"
    body: <tt>action_name/parameters.rhtml</tt>
  - !ruby/struct:SM::Flow::LI 
    label: "*"
    body: <tt>action_name/result.rhtml</tt>
  - !ruby/struct:SM::Flow::LI 
    label: "*"
    body: <tt>action_name/layout.rhtml</tt>
  type: :BULLET
- !ruby/struct:SM::Flow::P 
  body: Where <tt>action_name</tt> is the name of the action you gave to ClassMethods#web_service_scaffold.
- !ruby/struct:SM::Flow::P 
  body: You can use the default views in <tt>RAILS_DIR/lib/action_web_service/templates/scaffolds</tt> as a guide.
constants: []

full_name: ActionWebService::Scaffolding::ClassMethods
includes: []

instance_methods: 
- !ruby/object:RI::MethodSummary 
  name: web_service_scaffold
name: ClassMethods
superclass: 
