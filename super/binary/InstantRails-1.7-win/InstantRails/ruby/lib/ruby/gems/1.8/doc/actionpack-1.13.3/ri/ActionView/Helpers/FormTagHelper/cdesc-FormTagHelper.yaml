--- !ruby/object:RI::ClassDescription 
attributes: []

class_methods: []

comment: 
- !ruby/struct:SM::Flow::P 
  body: Provides a number of methods for creating form tags that doesn't rely on conventions with an object assigned to the template like FormHelper does. With the FormTagHelper, you provide the names and values yourself.
- !ruby/struct:SM::Flow::P 
  body: "NOTE: The html options disabled, readonly, and multiple can all be treated as booleans. So specifying <tt>:disabled =&gt; true</tt> will give <tt>disabled=&quot;disabled&quot;</tt>."
constants: []

full_name: ActionView::Helpers::FormTagHelper
includes: []

instance_methods: 
- !ruby/object:RI::MethodSummary 
  name: check_box_tag
- !ruby/object:RI::MethodSummary 
  name: end_form_tag
- !ruby/object:RI::MethodSummary 
  name: file_field_tag
- !ruby/object:RI::MethodSummary 
  name: form_tag
- !ruby/object:RI::MethodSummary 
  name: hidden_field_tag
- !ruby/object:RI::MethodSummary 
  name: image_submit_tag
- !ruby/object:RI::MethodSummary 
  name: password_field_tag
- !ruby/object:RI::MethodSummary 
  name: radio_button_tag
- !ruby/object:RI::MethodSummary 
  name: select_tag
- !ruby/object:RI::MethodSummary 
  name: start_form_tag
- !ruby/object:RI::MethodSummary 
  name: submit_tag
- !ruby/object:RI::MethodSummary 
  name: text_area_tag
- !ruby/object:RI::MethodSummary 
  name: text_field_tag
name: FormTagHelper
superclass: 
