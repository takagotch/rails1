--- !ruby/object:RI::ClassDescription 
attributes: 
- !ruby/object:RI::Attribute 
  comment: 
  - !ruby/struct:SM::Flow::P 
    body: Help text displayed on the status line [String]
  name: helpText
  rw: RW
- !ruby/object:RI::Attribute 
  comment: 
  - !ruby/struct:SM::Flow::P 
    body: Knob auto-increment/decrement value [Integer]
  name: increment
  rw: RW
- !ruby/object:RI::Attribute 
  comment: 
  - !ruby/struct:SM::Flow::P 
    body: Knob style [Integer]
  name: knobStyle
  rw: RW
- !ruby/object:RI::Attribute 
  comment: 
  - !ruby/struct:SM::Flow::P 
    body: Indicator needle color [FXColor]
  name: lineColor
  rw: RW
- !ruby/object:RI::Attribute 
  comment: 
  - !ruby/struct:SM::Flow::P 
    body: Knob range [Range]
  name: range
  rw: RW
- !ruby/object:RI::Attribute 
  comment: 
  - !ruby/struct:SM::Flow::P 
    body: Delta between ticks [Integer]
  name: tickDelta
  rw: RW
- !ruby/object:RI::Attribute 
  comment: 
  - !ruby/struct:SM::Flow::P 
    body: Tooltip text value [String]
  name: tipText
  rw: RW
- !ruby/object:RI::Attribute 
  comment: 
  - !ruby/struct:SM::Flow::P 
    body: Knob value [Integer]
  name: value
  rw: RW
class_methods: 
- !ruby/object:RI::MethodSummary 
  name: new
- !ruby/object:RI::MethodSummary 
  name: new
comment: 
- !ruby/struct:SM::Flow::P 
  body: The knob widget is a valuator widget which provides simple linear value range. While being moved, the knob sends <tt>SEL_CHANGED</tt> messages to its target; at the end of the interaction, a final <tt>SEL_COMMAND</tt> message is sent. The message data represents the current knob value (an integer).
- !ruby/struct:SM::Flow::H 
  level: 3
  text: Events
- !ruby/struct:SM::Flow::P 
  body: "The following messages are sent by FXKnob to its target:"
- !ruby/object:SM::Flow::LIST 
  contents: 
  - !ruby/struct:SM::Flow::LI 
    label: "+SEL_KEYPRESS+:"
    body: sent when a key goes down; the message data is an FXEvent instance.
  - !ruby/struct:SM::Flow::LI 
    label: "+SEL_KEYRELEASE+:"
    body: sent when a key goes up; the message data is an FXEvent instance.
  - !ruby/struct:SM::Flow::LI 
    label: "+SEL_LEFTBUTTONPRESS+:"
    body: sent when the left mouse button goes down; the message data is an FXEvent instance.
  - !ruby/struct:SM::Flow::LI 
    label: "+SEL_LEFTBUTTONRELEASE+:"
    body: sent when the left mouse button goes up; the message data is an FXEvent instance.
  - !ruby/struct:SM::Flow::LI 
    label: "+SEL_MIDDLEBUTTONPRESS+:"
    body: sent when the middle mouse button goes down; the message data is an FXEvent instance.
  - !ruby/struct:SM::Flow::LI 
    label: "+SEL_MIDDLEBUTTONRELEASE+:"
    body: sent when the middle mouse button goes up; the message data is an FXEvent instance.
  - !ruby/struct:SM::Flow::LI 
    label: "+SEL_COMMAND+:"
    body: sent at the end of a knob move; the message data is the new value of the knob.
  - !ruby/struct:SM::Flow::LI 
    label: "+SEL_CHANGED+:"
    body: sent continuously while the knob is being moved; the message data is an integer indicating the current knob value.
  type: :NOTE
- !ruby/struct:SM::Flow::H 
  level: 3
  text: Knob Control styles
- !ruby/object:SM::Flow::LIST 
  contents: 
  - !ruby/struct:SM::Flow::LI 
    label: "+KNOB_NEEDLE+:"
    body: Use a needle as indicator
  - !ruby/struct:SM::Flow::LI 
    label: "+KNOB_DOT+:"
    body: Use a dot as indicator
  - !ruby/struct:SM::Flow::LI 
    label: "+KNOB_TICKS+:"
    body: Show ticks around the knob
  - !ruby/struct:SM::Flow::LI 
    label: "+KNOB_INDICATOR+:"
    body: Show only the indicator (like a speedometer)
  - !ruby/struct:SM::Flow::LI 
    label: "+KNOB_NORMAL+:"
    body: Normal knob looks
  type: :NOTE
constants: []

full_name: Fox::FXKnob
includes: []

instance_methods: 
- !ruby/object:RI::MethodSummary 
  name: getLimits
- !ruby/object:RI::MethodSummary 
  name: setLimits
name: FXKnob
superclass: Object
