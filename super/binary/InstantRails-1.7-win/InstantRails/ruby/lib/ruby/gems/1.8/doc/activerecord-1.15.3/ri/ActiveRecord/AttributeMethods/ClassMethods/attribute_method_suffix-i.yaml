--- !ruby/object:RI::MethodDescription 
aliases: []

block_params: 
comment: 
- !ruby/struct:SM::Flow::P 
  body: Declare a method available for all attributes with the given suffix. Uses method_missing and respond_to? to rewrite the method
- !ruby/struct:SM::Flow::VERB 
  body: "  #{attr}#{suffix}(*args, &amp;block)\n"
- !ruby/struct:SM::Flow::P 
  body: to
- !ruby/struct:SM::Flow::VERB 
  body: "  attribute#{suffix}(#{attr}, *args, &amp;block)\n"
- !ruby/struct:SM::Flow::P 
  body: An attribute#{suffix} instance method must exist and accept at least the attr argument.
- !ruby/struct:SM::Flow::P 
  body: "For example:"
- !ruby/struct:SM::Flow::VERB 
  body: "  class Person &lt; ActiveRecord::Base\n    attribute_method_suffix '_changed?'\n\n    private\n      def attribute_changed?(attr)\n        ...\n      end\n  end\n\n  person = Person.find(1)\n  person.name_changed?    # =&gt; false\n  person.name = 'Hubert'\n  person.name_changed?    # =&gt; true\n"
full_name: ActiveRecord::AttributeMethods::ClassMethods#attribute_method_suffix
is_singleton: false
name: attribute_method_suffix
params: (*suffixes)
visibility: public
