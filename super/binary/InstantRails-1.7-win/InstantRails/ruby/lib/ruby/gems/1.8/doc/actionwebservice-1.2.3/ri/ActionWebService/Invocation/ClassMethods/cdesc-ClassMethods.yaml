--- !ruby/object:RI::ClassDescription 
attributes: []

class_methods: []

comment: 
- !ruby/struct:SM::Flow::P 
  body: Invocation interceptors provide a means to execute custom code before and after method invocations on ActionWebService::Base objects.
- !ruby/struct:SM::Flow::P 
  body: When running in <em>Direct</em> dispatching mode, ActionController filters should be used for this functionality instead.
- !ruby/struct:SM::Flow::P 
  body: The semantics of invocation interceptors are the same as ActionController filters, and accept the same parameters and options.
- !ruby/struct:SM::Flow::P 
  body: A <em>before</em> interceptor can also cancel execution by returning <tt>false</tt>, or returning a <tt>[false, &quot;cancel reason&quot;]</tt> array if it wishes to supply a reason for canceling the request.
- !ruby/struct:SM::Flow::H 
  level: 3
  text: Example
- !ruby/struct:SM::Flow::VERB 
  body: "  class CustomService &lt; ActionWebService::Base\n    before_invocation :intercept_add, :only =&gt; [:add]\n\n    def add(a, b)\n      a + b\n    end\n\n    private\n      def intercept_add\n        return [false, &quot;permission denied&quot;] # cancel it\n      end\n  end\n"
- !ruby/struct:SM::Flow::P 
  body: "Options:"
- !ruby/object:SM::Flow::LIST 
  contents: 
  - !ruby/struct:SM::Flow::LI 
    label: <tt>:except</tt>
    body: A list of methods for which the interceptor will NOT be called
  - !ruby/struct:SM::Flow::LI 
    label: <tt>:only</tt>
    body: A list of methods for which the interceptor WILL be called
  type: :LABELED
constants: []

full_name: ActionWebService::Invocation::ClassMethods
includes: []

instance_methods: 
- !ruby/object:RI::MethodSummary 
  name: after_invocation
- !ruby/object:RI::MethodSummary 
  name: append_after_invocation
- !ruby/object:RI::MethodSummary 
  name: append_before_invocation
- !ruby/object:RI::MethodSummary 
  name: before_invocation
- !ruby/object:RI::MethodSummary 
  name: prepend_after_invocation
- !ruby/object:RI::MethodSummary 
  name: prepend_before_invocation
name: ClassMethods
superclass: 
