--- !ruby/object:RI::MethodDescription 
aliases: []

block_params: 
comment: 
- !ruby/struct:SM::Flow::P 
  body: Send binary data to the user as a file download. May set content type, apparent file name, and specify whether to show data inline or download as an attachment.
- !ruby/struct:SM::Flow::P 
  body: "Options:"
- !ruby/object:SM::Flow::LIST 
  contents: 
  - !ruby/struct:SM::Flow::LI 
    label: "*"
    body: <tt>:filename</tt> - Suggests a filename for the browser to use.
  - !ruby/struct:SM::Flow::LI 
    label: "*"
    body: <tt>:type</tt> - specifies an HTTP content type. Defaults to 'application/octet-stream'.
  - !ruby/struct:SM::Flow::LI 
    label: "*"
    body: <tt>:disposition</tt> - specifies whether the file will be shown inline or downloaded. Valid values are 'inline' and 'attachment' (default).
  - !ruby/struct:SM::Flow::LI 
    label: "*"
    body: <tt>:status</tt> - specifies the status code to send with the response. Defaults to '200 OK'.
  type: :BULLET
- !ruby/struct:SM::Flow::P 
  body: "Generic data download:"
- !ruby/struct:SM::Flow::VERB 
  body: "  send_data buffer\n"
- !ruby/struct:SM::Flow::P 
  body: "Download a dynamically-generated tarball:"
- !ruby/struct:SM::Flow::VERB 
  body: "  send_data generate_tgz('dir'), :filename =&gt; 'dir.tgz'\n"
- !ruby/struct:SM::Flow::P 
  body: "Display an image Active Record in the browser:"
- !ruby/struct:SM::Flow::VERB 
  body: "  send_data image.data, :type =&gt; image.content_type, :disposition =&gt; 'inline'\n"
- !ruby/struct:SM::Flow::P 
  body: See <tt>send_file</tt> for more information on HTTP Content-* headers and caching.
full_name: ActionController::Streaming#send_data
is_singleton: false
name: send_data
params: (data, options = {})
visibility: protected
