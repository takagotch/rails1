--- !ruby/object:RI::ClassDescription 
attributes: []

class_methods: []

comment: 
- !ruby/struct:SM::Flow::P 
  body: The TextHelper Module provides a set of methods for filtering, formatting and transforming strings that can reduce the amount of inline Ruby code in your views. These helper methods extend ActionView making them callable within your template files as shown in the following example which truncates the title of each post to 10 characters.
- !ruby/struct:SM::Flow::VERB 
  body: "  &lt;% @posts.each do |post| %&gt;\n    # post == 'This is my title'\n    Title: &lt;%= truncate(post.title, 10) %&gt;\n  &lt;% end %&gt;\n   =&gt; Title: This is my...\n"
constants: 
- !ruby/object:RI::Constant 
  comment: 
  name: VERBOTEN_TAGS
  value: "%w(form script plaintext) unless defined?(VERBOTEN_TAGS)"
- !ruby/object:RI::Constant 
  comment: 
  name: VERBOTEN_ATTRS
  value: /^on/i unless defined?(VERBOTEN_ATTRS)
- !ruby/object:RI::Constant 
  comment: 
  name: AUTO_LINK_RE
  value: "%r{                         (                          # leading text                           <\\w+.*?>|                # leading HTML tag, or                           [^=!:'\"/]|               # leading punctuation, or                            ^                        # beginning of line                         )                         (                           (?:https?://)|           # protocol spec, or                           (?:www\\.)                # www.*                         )                          (                           [-\\w]+                   # subdomain or domain                           (?:\\.[-\\w]+)*            # remaining subdomains or domain                           (?::\\d+)?                # port                           (?:/(?:(?:[~\\w\\+%-]|(?:[,.;:][^\\s$]))+)?)* # path                           (?:\\?[\\w\\+%&=.;-]+)?     # query string                           (?:\\#[\\w\\-]*)?           # trailing anchor                         )                         ([[:punct:]]|\\s|<|$)       # trailing text                        }x unless const_defined?(:AUTO_LINK_RE)"
full_name: ActionView::Helpers::TextHelper
includes: []

instance_methods: 
- !ruby/object:RI::MethodSummary 
  name: auto_link
- !ruby/object:RI::MethodSummary 
  name: concat
- !ruby/object:RI::MethodSummary 
  name: cycle
- !ruby/object:RI::MethodSummary 
  name: excerpt
- !ruby/object:RI::MethodSummary 
  name: highlight
- !ruby/object:RI::MethodSummary 
  name: markdown
- !ruby/object:RI::MethodSummary 
  name: pluralize
- !ruby/object:RI::MethodSummary 
  name: reset_cycle
- !ruby/object:RI::MethodSummary 
  name: sanitize
- !ruby/object:RI::MethodSummary 
  name: simple_format
- !ruby/object:RI::MethodSummary 
  name: strip_links
- !ruby/object:RI::MethodSummary 
  name: strip_tags
- !ruby/object:RI::MethodSummary 
  name: textilize
- !ruby/object:RI::MethodSummary 
  name: textilize_without_paragraph
- !ruby/object:RI::MethodSummary 
  name: truncate
- !ruby/object:RI::MethodSummary 
  name: word_wrap
name: TextHelper
superclass: 
