--- !ruby/object:RI::MethodDescription 
aliases: []

block_params: 
comment: 
- !ruby/struct:SM::Flow::P 
  body: Search for <em>string</em> in text buffer, returning the extent of the string in <em>beg</em> and <em>end</em>. The search starts from the given <em>start</em> position, scans forward (<tt>SEARCH_FORWARD</tt>) or backward (<tt>SEARCH_BACKWARD</tt>), and wraps around if <tt>SEARCH_WRAP</tt> has been specified. The search type is either a plain search (<tt>SEARCH_EXACT</tt>), case insensitive search (<tt>SEARCH_IGNORECASE</tt>), or regular expression search (<tt>SEARCH_REGEX</tt>). For regular expression searches, capturing parentheses are used if <em>npar</em> is greater than 1; in this case, the number of entries in the <em>beg</em> and <em>end</em> arrays must be <em>npar</em> also. If either <em>beg</em> or <em>end</em> or both are nil, internal arrays are used.
full_name: Fox::FXText#findText
is_singleton: false
name: findText
params: (string, beg=nil, end=nil, start=0, flags=SEARCH_FORWARD|SEARCH_WRAP|SEARCH_EXACT, npar=1)
visibility: public
