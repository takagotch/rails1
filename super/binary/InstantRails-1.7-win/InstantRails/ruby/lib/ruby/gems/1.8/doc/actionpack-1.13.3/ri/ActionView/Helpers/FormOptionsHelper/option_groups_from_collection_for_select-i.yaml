--- !ruby/object:RI::MethodDescription 
aliases: []

block_params: 
comment: 
- !ruby/struct:SM::Flow::P 
  body: Returns a string of option tags, like options_from_collection_for_select, but surrounds them with &lt;optgroup&gt; tags.
- !ruby/struct:SM::Flow::P 
  body: An array of group objects are passed. Each group should return an array of options when calling group_method Each group should return its name when calling group_label_method.
- !ruby/struct:SM::Flow::P 
  body: html_option_groups_from_collection(@continents, &quot;countries&quot;, &quot;continent_name&quot;, &quot;country_id&quot;, &quot;country_name&quot;, @selected_country.id)
- !ruby/struct:SM::Flow::P 
  body: "Could become:"
- !ruby/struct:SM::Flow::VERB 
  body: " &lt;optgroup label=&quot;Africa&quot;&gt;\n  &lt;select&gt;Egypt&lt;/select&gt;\n  &lt;select&gt;Rwanda&lt;/select&gt;\n  ...\n &lt;/optgroup&gt;\n &lt;optgroup label=&quot;Asia&quot;&gt;\n  &lt;select&gt;China&lt;/select&gt;\n  &lt;select&gt;India&lt;/select&gt;\n  &lt;select&gt;Japan&lt;/select&gt;\n  ...\n &lt;/optgroup&gt;\n"
- !ruby/struct:SM::Flow::P 
  body: "with objects of the following classes: class Continent"
- !ruby/struct:SM::Flow::VERB 
  body: "  def initialize(p_name, p_countries) @continent_name = p_name; @countries = p_countries; end\n  def continent_name() @continent_name; end\n  def countries() @countries; end\n"
- !ruby/struct:SM::Flow::P 
  body: end class Country
- !ruby/struct:SM::Flow::VERB 
  body: "  def initialize(id, name) @id = id; @name = name end\n  def country_id() @id; end\n  def country_name() @name; end\n"
- !ruby/struct:SM::Flow::P 
  body: end
- !ruby/struct:SM::Flow::P 
  body: "NOTE: Only the option tags are returned, you have to wrap this call in a regular HTML select tag."
full_name: ActionView::Helpers::FormOptionsHelper#option_groups_from_collection_for_select
is_singleton: false
name: option_groups_from_collection_for_select
params: (collection, group_method, group_label_method, option_key_method, option_value_method, selected_key = nil)
visibility: public
