--- !ruby/object:RI::ClassDescription 
attributes: []

class_methods: []

comment: 
- !ruby/struct:SM::Flow::P 
  body: All of the following validations are defined in the class scope of the model that you're interested in validating. They offer a more declarative way of specifying when the model is valid and when it is not. It is recommended to use these over the low-level calls to validate and validate_on_create when possible.
constants: 
- !ruby/object:RI::Constant 
  comment: 
  name: DEFAULT_VALIDATION_OPTIONS
  value: "{         :on => :save,         :allow_nil => false,         :message => nil"
- !ruby/object:RI::Constant 
  comment: 
  name: ALL_RANGE_OPTIONS
  value: "[ :is, :within, :in, :minimum, :maximum ].freeze"
full_name: ActiveRecord::Validations::ClassMethods
includes: []

instance_methods: 
- !ruby/object:RI::MethodSummary 
  name: condition_block?
- !ruby/object:RI::MethodSummary 
  name: create!
- !ruby/object:RI::MethodSummary 
  name: evaluate_condition
- !ruby/object:RI::MethodSummary 
  name: validate
- !ruby/object:RI::MethodSummary 
  name: validate_on_create
- !ruby/object:RI::MethodSummary 
  name: validate_on_update
- !ruby/object:RI::MethodSummary 
  name: validates_acceptance_of
- !ruby/object:RI::MethodSummary 
  name: validates_associated
- !ruby/object:RI::MethodSummary 
  name: validates_confirmation_of
- !ruby/object:RI::MethodSummary 
  name: validates_each
- !ruby/object:RI::MethodSummary 
  name: validates_exclusion_of
- !ruby/object:RI::MethodSummary 
  name: validates_format_of
- !ruby/object:RI::MethodSummary 
  name: validates_inclusion_of
- !ruby/object:RI::MethodSummary 
  name: validates_length_of
- !ruby/object:RI::MethodSummary 
  name: validates_numericality_of
- !ruby/object:RI::MethodSummary 
  name: validates_presence_of
- !ruby/object:RI::MethodSummary 
  name: validates_size_of
- !ruby/object:RI::MethodSummary 
  name: validates_uniqueness_of
name: ClassMethods
superclass: 
