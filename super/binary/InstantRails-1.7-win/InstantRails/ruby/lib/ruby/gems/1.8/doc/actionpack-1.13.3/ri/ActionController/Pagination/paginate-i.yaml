--- !ruby/object:RI::MethodDescription 
aliases: []

block_params: 
comment: 
- !ruby/struct:SM::Flow::P 
  body: Returns a paginator and a collection of Active Record model instances for the paginator's current page. This is designed to be used in a single action; to automatically paginate multiple actions, consider ClassMethods#paginate.
- !ruby/struct:SM::Flow::P 
  body: "<tt>options</tt> are:"
- !ruby/object:SM::Flow::LIST 
  contents: 
  - !ruby/struct:SM::Flow::LI 
    label: "<tt>:singular_name</tt>:"
    body: the singular name to use, if it can't be inferred by singularizing the collection name
  - !ruby/struct:SM::Flow::LI 
    label: "<tt>:class_name</tt>:"
    body: the class name to use, if it can't be inferred by camelizing the singular name
  - !ruby/struct:SM::Flow::LI 
    label: "<tt>:per_page</tt>:"
    body: the maximum number of items to include in a single page. Defaults to 10
  - !ruby/struct:SM::Flow::LI 
    label: "<tt>:conditions</tt>:"
    body: optional conditions passed to Model.find(:all, *params) and Model.count
  - !ruby/struct:SM::Flow::LI 
    label: "<tt>:order</tt>:"
    body: optional order parameter passed to Model.find(:all, *params)
  - !ruby/struct:SM::Flow::LI 
    label: "<tt>:order_by</tt>:"
    body: (deprecated, used :order) optional order parameter passed to Model.find(:all, *params)
  - !ruby/struct:SM::Flow::LI 
    label: "<tt>:joins</tt>:"
    body: optional joins parameter passed to Model.find(:all, *params) and Model.count
  - !ruby/struct:SM::Flow::LI 
    label: "<tt>:join</tt>:"
    body: (deprecated, used :joins or :include) optional join parameter passed to Model.find(:all, *params) and Model.count
  - !ruby/struct:SM::Flow::LI 
    label: "<tt>:include</tt>:"
    body: optional eager loading parameter passed to Model.find(:all, *params) and Model.count
  - !ruby/struct:SM::Flow::LI 
    label: "<tt>:select</tt>:"
    body: ":select parameter passed to Model.find(:all, *params)"
  - !ruby/struct:SM::Flow::LI 
    label: "<tt>:count</tt>:"
    body: parameter passed as :select option to Model.count(*params)
  type: :NOTE
full_name: ActionController::Pagination#paginate
is_singleton: false
name: paginate
params: (collection_id, options={})
visibility: public
