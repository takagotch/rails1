--- !ruby/object:RI::MethodDescription 
aliases: []

block_params: 
comment: 
- !ruby/struct:SM::Flow::P 
  body: Return <tt>true</tt> if given timeout has been set, otherwise return <tt>false</tt>.
- !ruby/struct:SM::Flow::P 
  body: "For example, suppose you set up a timeout event to run ten seconds from now:"
- !ruby/struct:SM::Flow::VERB 
  body: "    timeout = app.addTimeout(10*1000, ...)\n"
- !ruby/struct:SM::Flow::P 
  body: "but in the meantime, you decide that you want to cancel it if it hasn't run yet:"
- !ruby/struct:SM::Flow::VERB 
  body: "    if app.hasTimeout?(timeout)\n      app.removeTimeout(timeout)\n    end\n"
full_name: Fox::FXApp#hasTimeout?
is_singleton: false
name: hasTimeout?
params: (*args)
visibility: public
