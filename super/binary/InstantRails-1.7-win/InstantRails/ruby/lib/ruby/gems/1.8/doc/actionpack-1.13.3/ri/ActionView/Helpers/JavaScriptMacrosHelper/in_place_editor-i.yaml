--- !ruby/object:RI::MethodDescription 
aliases: []

block_params: 
comment: 
- !ruby/struct:SM::Flow::P 
  body: "DEPRECATION WARNING: This method will become a separate plugin when Rails 2.0 ships."
- !ruby/struct:SM::Flow::P 
  body: Makes an HTML element specified by the DOM ID <tt>field_id</tt> become an in-place editor of a property.
- !ruby/struct:SM::Flow::P 
  body: "A form is automatically created and displayed when the user clicks the element, something like this:"
- !ruby/struct:SM::Flow::VERB 
  body: "  &lt;form id=&quot;myElement-in-place-edit-form&quot; target=&quot;specified url&quot;&gt;\n    &lt;input name=&quot;value&quot; text=&quot;The content of myElement&quot;/&gt;\n    &lt;input type=&quot;submit&quot; value=&quot;ok&quot;/&gt;\n    &lt;a onclick=&quot;javascript to cancel the editing&quot;&gt;cancel&lt;/a&gt;\n  &lt;/form&gt;\n"
- !ruby/struct:SM::Flow::P 
  body: The form is serialized and sent to the server using an AJAX call, the action on the server should process the value and return the updated value in the body of the reponse. The element will automatically be updated with the changed value (as returned from the server).
- !ruby/struct:SM::Flow::P 
  body: "Required <tt>options</tt> are:"
- !ruby/object:SM::Flow::LIST 
  contents: 
  - !ruby/struct:SM::Flow::LI 
    label: "<tt>:url</tt>:"
    body: Specifies the url where the updated value should be sent after the user presses &quot;ok&quot;.
  type: :NOTE
- !ruby/struct:SM::Flow::P 
  body: "Addtional <tt>options</tt> are:"
- !ruby/object:SM::Flow::LIST 
  contents: 
  - !ruby/struct:SM::Flow::LI 
    label: "<tt>:rows</tt>:"
    body: Number of rows (more than 1 will use a TEXTAREA)
  - !ruby/struct:SM::Flow::LI 
    label: "<tt>:cols</tt>:"
    body: Number of characters the text input should span (works for both INPUT and TEXTAREA)
  - !ruby/struct:SM::Flow::LI 
    label: "<tt>:size</tt>:"
    body: Synonym for :cols when using a single line text input.
  - !ruby/struct:SM::Flow::LI 
    label: "<tt>:cancel_text</tt>:"
    body: "The text on the cancel link. (default: &quot;cancel&quot;)"
  - !ruby/struct:SM::Flow::LI 
    label: "<tt>:save_text</tt>:"
    body: "The text on the save link. (default: &quot;ok&quot;)"
  - !ruby/struct:SM::Flow::LI 
    label: "<tt>:loading_text</tt>:"
    body: "The text to display while the data is being loaded from the server (default: &quot;Loading...&quot;)"
  - !ruby/struct:SM::Flow::LI 
    label: "<tt>:saving_text</tt>:"
    body: "The text to display when submitting to the server (default: &quot;Saving...&quot;)"
  - !ruby/struct:SM::Flow::LI 
    label: "<tt>:external_control</tt>:"
    body: The id of an external control used to enter edit mode.
  - !ruby/struct:SM::Flow::LI 
    label: "<tt>:load_text_url</tt>:"
    body: URL where initial value of editor (content) is retrieved.
  - !ruby/struct:SM::Flow::LI 
    label: "<tt>:options</tt>:"
    body: Pass through options to the AJAX call (see prototype's Ajax.Updater)
  - !ruby/struct:SM::Flow::LI 
    label: "<tt>:with</tt>:"
    body: JavaScript snippet that should return what is to be sent in the AJAX call, <tt>form</tt> is an implicit parameter
  - !ruby/struct:SM::Flow::LI 
    label: "<tt>:script</tt>:"
    body: "Instructs the in-place editor to evaluate the remote JavaScript response (default: false)"
  type: :NOTE
- !ruby/struct:SM::Flow::P 
  body: "<tt>:click_to_edit_text</tt>::The text shown during mouseover the editable text (default: &quot;Click to edit&quot;)"
full_name: ActionView::Helpers::JavaScriptMacrosHelper#in_place_editor
is_singleton: false
name: in_place_editor
params: (field_id, options = {})
visibility: public
