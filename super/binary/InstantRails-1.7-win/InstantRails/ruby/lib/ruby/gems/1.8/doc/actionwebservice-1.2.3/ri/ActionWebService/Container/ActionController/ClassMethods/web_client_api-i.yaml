--- !ruby/object:RI::MethodDescription 
aliases: []

block_params: 
comment: 
- !ruby/struct:SM::Flow::P 
  body: Creates a client for accessing remote web services, using the given <tt>protocol</tt> to communicate with the <tt>endpoint_uri</tt>.
- !ruby/struct:SM::Flow::H 
  level: 4
  text: Example
- !ruby/struct:SM::Flow::VERB 
  body: "  class MyController &lt; ActionController::Base\n    web_client_api :blogger, :xmlrpc, &quot;http://blogger.com/myblog/api/RPC2&quot;, :handler_name =&gt; 'blogger'\n  end\n"
- !ruby/struct:SM::Flow::P 
  body: In this example, a protected method named <tt>blogger</tt> will now exist on the controller, and calling it will return the XML-RPC client object for working with that remote service.
- !ruby/struct:SM::Flow::P 
  body: <tt>options</tt> is the set of protocol client specific options (see a protocol client class for details).
- !ruby/struct:SM::Flow::P 
  body: If your API definition does not exist on the load path with the correct rules for it to be found using <tt>name</tt>, you can pass in the API definition class via <tt>options</tt>, using a key of <tt>:api</tt>
full_name: ActionWebService::Container::ActionController::ClassMethods#web_client_api
is_singleton: false
name: web_client_api
params: (name, protocol, endpoint_uri, options={})
visibility: public
