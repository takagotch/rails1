--- !ruby/object:RI::MethodDescription 
aliases: []

block_params: 
comment: 
- !ruby/struct:SM::Flow::P 
  body: "Guesses the table name (in forced lower-case) based on the name of the class in the inheritance hierarchy descending directly from ActiveRecord. So if the hierarchy looks like: Reply &lt; Message &lt; ActiveRecord, then Message is used to guess the table name from even when called on Reply. The rules used to do the guess are handled by the Inflector class in Active Support, which knows almost all common English inflections (report a bug if your inflection isn't covered)."
- !ruby/struct:SM::Flow::P 
  body: "Nested classes are given table names prefixed by the singular form of the parent's table name. Example:"
- !ruby/struct:SM::Flow::VERB 
  body: "  file                  class               table_name\n  invoice.rb            Invoice             invoices\n  invoice/lineitem.rb   Invoice::Lineitem   invoice_lineitems\n"
- !ruby/struct:SM::Flow::P 
  body: Additionally, the class-level table_name_prefix is prepended and the table_name_suffix is appended. So if you have &quot;myapp_&quot; as a prefix, the table name guess for an Invoice class becomes &quot;myapp_invoices&quot;. Invoice::Lineitem becomes &quot;myapp_invoice_lineitems&quot;.
- !ruby/struct:SM::Flow::P 
  body: "You can also overwrite this class method to allow for unguessable links, such as a Mouse class with a link to a &quot;mice&quot; table. Example:"
- !ruby/struct:SM::Flow::VERB 
  body: "  class Mouse &lt; ActiveRecord::Base\n    set_table_name &quot;mice&quot;\n  end\n"
full_name: ActiveRecord::Base::table_name
is_singleton: true
name: table_name
params: ()
visibility: public
